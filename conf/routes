# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Packages
GET     /packages                   controllers.PackagesController.index
GET     /package/new                controllers.PackagesController.newEntity
POST    /package/:id                controllers.PackagesController.update(id: String)
POST    /package                    controllers.PackagesController.create
#POST    /package/register            controllers.PackagesController.register(id: String)
POST    /package/:id                controllers.PackagesController.update(id: String)
POST    /package/:id/delete         controllers.PackagesController.delete(id: String)

POST    /signup                     controllers.Application.signIn
POST    /logout                     controllers.Application.logout


# Users
GET     /users                      controllers.UsersController.index
POST    /user                       controllers.UsersController.create
GET     /user/new                   controllers.UsersController.newEntity
POST    /user/:email                controllers.UsersController.update(email: String)
GET     /user/:email/edit           controllers.UsersController.edit(email: String)
GET     /user/:email                controllers.UsersController.show(email: String)
POST    /user/:email/delete         controllers.UsersController.delete(email: String)

# Tasks
GET     /tasks                      controllers.TasksController.index
GET     /task/new                   controllers.TasksController.newEntity
GET     /task/:task                 controllers.TasksController.show(task: String)
GET     /task/:task/edit            controllers.TasksController.edit(task: String)
GET     /task/:t/package/:p         controllers.PackagesController.show(t: String, p: String)
GET     /task/:t/package/:p/edit    controllers.PackagesController.edit(t: String, p: String)
GET     /task/:t/package/:p/copy    controllers.PackagesController.copy(t: String, p: String)
POST    /task                       controllers.TasksController.create
POST    /task/:task/delete          controllers.TasksController.delete(task: String)
POST    /task/:task                 controllers.TasksController.update(task: String)

#Workflows
GET     /workflow/new               controllers.WorkflowController.newEntity
GET     /workflow/:workflow/edit    controllers.WorkflowController.edit(workflow)
GET     /workflows                  controllers.WorkflowController.index
POST    /workflow                   controllers.WorkflowController.create
POST    /workflow/:workflow         controllers.WorkflowController.update(workflow: String)
POST    /workflow/:workflow/delete  controllers.WorkflowController.delete(workflow: String)
GET     /workflow/:workflow         controllers.WorkflowController.show(workflow: String)
GET     /workflow/:workflow/copy    controllers.WorkflowController.copy(workflow: String)


#Statuses
GET     /status/new                 controllers.StatusesController.newEntity
GET     /status/:status             controllers.StatusesController.show(status: String)
GET     /status/:status/edit        controllers.StatusesController.edit(status: String)
GET     /statuses                   controllers.StatusesController.index
POST    /status                     controllers.StatusesController.create
POST    /status/:id                 controllers.StatusesController.update(id: String)
POST    /status/:status/delete      controllers.StatusesController.delete(status: String)

#Plugins
GET     /plugins                  controllers.PluginsController.index
GET     /plugins/:plugin          controllers.PluginsController.show(plugin: String)
GET     /plugin/:plugin/edit      controllers.PluginsController.edit(plugin: String)
POST    /plugins                  controllers.PluginsController.create
POST    /plugin/:id               controllers.PluginsController.update(id: String)

